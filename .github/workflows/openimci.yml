name: Isolated Docker Compose Tests

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Get IP Address
      id: get-ip
      run: echo "OPENIM_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

    - name: Get OpenIM Data DIR
      id: get-dir
      run: echo "DATA_DIR=$(pwd)" >> $GITHUB_ENV

    - name: Run Docker Compose
      run: |
        ./scripts/init-config.sh --force
        docker-compose up -d
        docker-compose ps

    - name: Test OpenIM Server
      run: |
        sleep 30
        docker-compose logs openim-server

    - name: Test OpenIM chat
      run: |
        sleep 30
        docker-compose logs openim-chat

    - name: Check the OpenIM environment and status
      id: docker_info
      run: |
        sleep 30
        echo "images<<EOF" >> $GITHUB_ENV
        sudo docker images >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "containers<<EOF" >> $GITHUB_ENV
        sudo docker ps >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          > [!TIP]
          > Run make install to check the status

          ### Docker Images:
          <details><summary>Click to expand docker images</summary>

          ```bash
          ${{ env.images }}
          ```
          </details>

          ### Docker Processes:
          <details><summary>Click to expand docker ps</summary>

          ```bash
          ${{ env.containers }}
          ```
          </details>
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    - name: stop docker-compose
      run: |
        docker-compose down

    - name: clean all docker containers
      run: |
        docker stop $(docker ps -qa)
        docker rm $(docker ps -qa)
        docker network prune -f

  test-example:
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          arch: [amd64, arm64]
          compose-file: 
            - 'example/basic-openim-server-dependency.yml'
            - 'example/full-openim-server-and-chat.yml'
            - 'example/full-openim-server-chat-web.yml'
            - 'example/full-openim-server-chat-web-admin.yml'
            - 'example/only-openim-server.yml'
            - 'example/volume-all-server.yml'

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/${{ matrix.arch }}

      - name: Get IP Address
        run: echo "OPENIM_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

      - name: Get OpenIM Data DIR
        run: |
          echo "DATA_DIR=$(pwd)" >> $GITHUB_ENV
          echo $DATA_DIR

      - name: Run Docker ${{ matrix.compose-file }} Compose
        run: |
          ./scripts/init-config.sh --force
          docker-compose -f ${{ matrix.compose-file }} up -d
        
      - name: Save Docker Info
        run: |
          mkdir -p ./tmp
          echo "### Docker Info for ${{ matrix.compose-file }} on ${{ matrix.arch }}" >> ./tmp/docker_info.md
          echo "#### Docker Images" >> ./tmp/docker_info.md
          docker images | tee -a ./tmp/docker_info.md
          echo "#### Docker Containers" >> ./tmp/docker_info.md
          docker ps -a | tee -a ./tmp/docker_info.md
      
      - name: Stop Docker Compose
        run: |
          docker-compose -f ${{ matrix.compose-file }} ps
          docker-compose -f ${{ matrix.compose-file }} down
          docker stop $(docker ps -qa)
          docker rm $(docker ps -qa)
          docker network prune -f
      
      - name: Set Artifact Name
        id: set_artifact_name
        run: |
          echo "ARTIFACT_NAME=docker-info-${{ matrix.arch }}-$(echo ${{ matrix.compose-file }} | sed 's|/|-|g')" >> $GITHUB_ENV
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./tmp/docker_info.md           

  consolidate-results:
    needs: test-example
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
  
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
      continue-on-error: true
  
    - name: Consolidate Results
      run: |
        mkdir -p ./tmp
        if compgen -G "./artifacts/*" > /dev/null; then
          echo "# OpenIM Docker Test Results" > ./tmp/consolidated_report.md
          for file in ./artifacts/*; do
            cat "$file" >> ./tmp/consolidated_report.md
            echo "" >> ./tmp/consolidated_report.md
          done  
        else
          echo "No artifacts found in './artifacts' directory."
          exit 0
      continue-on-error: true
  
    - name: Comment PR with Consolidated Report
      if: always() && steps.consolidate-results.conclusion == 'success'
      uses: thollander/actions-comment-pull-request@v2
      with:
        filePath: ./tmp/consolidated_report.md
        comment_tag: docker_info_report
        reactions: eyes, rocket
        mode: recreate
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
      continue-on-error: true